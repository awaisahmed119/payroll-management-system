 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package forms;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javaapplication1.DBconnection;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Awais
 */
public class Allowances extends javax.swing.JFrame {

    /**
     * Creates new form Allowances
     */
    public Allowances() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        updateTable();
    }
    
    public void updateTable(){
        com.mysql.jdbc.Connection conn = new DBconnection().connect();
         PreparedStatement pst;
        try{
        String sql=" select * from empAllowances";
         pst = conn.prepareStatement(sql);
         ResultSet rs = pst.executeQuery();
         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        
        catch (Exception e) {
            System.out.println("exception " + e);
          
        }
        
        int total = 0;
    // iterate over all columns
   for  (int r = 0 ; r < jTable1.getRowCount() ; r++) {   
    for (int i = 2 ; i < jTable1.getColumnCount() ; i++) {
        // null or not Integer will throw exception
        try{
        total += (Integer) jTable1.getValueAt(r, i);
        }
         catch (Exception e) {
         //   System.out.println("exception " + e);
          
        }
    }
        try{
         String sql="update totals set totalAllowance="+total+" where empid="+"'"+jTable1.getValueAt(r, 1)+"'";
          pst = conn.prepareStatement(sql);
          pst.executeUpdate();
        }
         catch (Exception e) {
         //   System.out.println("exception " + e);
          
        }
        
    
    total=0;
    }
   try{
    String sql=" select a.*,t.TotalAllowance from empallowances a,totals t where a.empid=t.empid";
         pst = conn.prepareStatement(sql);
         ResultSet rs = pst.executeQuery();
         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
   }
    catch (SQLException e) {
         //   System.out.println("exception " + e);
          
        }
   
   
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        NewAllowance = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 767, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );

        jScrollPane1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jScrollPane1VetoableChange(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        jLabel3.setText("Search");

        NewAllowance.setText("Add New Allowance");
        NewAllowance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewAllowanceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 536, Short.MAX_VALUE)
                .addComponent(NewAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addContainerGap(734, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewAllowance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     public void filterTable(String query){
        
        TableModel model =(TableModel) jTable1.getModel();
        TableRowSorter<TableModel> tr=new TableRowSorter<TableModel>(model);
        jTable1.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
  
    }
  
    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased

         String s=search.getText().toString();
        filterTable(s);

    }//GEN-LAST:event_searchKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        
     
        /*
        int selectedRow = jTable1.getSelectedRow();
           selectedRow = jTable1.convertRowIndexToModel(selectedRow);
         
       
        TableModel model = (TableModel)jTable1.getModel();
        id.setText(model.getValueAt(selectedRow, 1).toString());
        qualification.setText(model.getValueAt(selectedRow, 3).toString());
        other1.setText(model.getValueAt(selectedRow, 4).toString());
        seniorpost.setText(model.getValueAt(selectedRow, 5).toString());
        hr.setText(model.getValueAt(selectedRow, 6).toString());
        con.setText(model.getValueAt(selectedRow, 7).toString());
        md.setText(model.getValueAt(selectedRow, 8).toString());
        ent.setText(model.getValueAt(selectedRow, 9).toString());
        orderly.setText(model.getValueAt(selectedRow, 10).toString());
        dp.setText(model.getValueAt(selectedRow, 11).toString());
        inc.setText(model.getValueAt(selectedRow, 12).toString());
        other2.setText(model.getValueAt(selectedRow, 13).toString());
        adhoc.setText(model.getValueAt(selectedRow, 14).toString());
        total.setText(model.getValueAt(selectedRow, 15).toString());

*/
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
        // TODO add your handling code here:
        

        
    }//GEN-LAST:event_jTable1KeyTyped

    private void jScrollPane1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jScrollPane1VetoableChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jScrollPane1VetoableChange

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
        
         if ("tableCellEditor".equals(evt.getPropertyName())) {
            if (jTable1.isEditing());
               // processEditingStarted();
            else {
               // processEditingStopped();
                doupdate();
                    
                   
                    }
        }
    }//GEN-LAST:event_jTable1PropertyChange

private void NewAllowanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewAllowanceActionPerformed
        // TODO add your handling code here:
        com.mysql.jdbc.Connection conn = new DBconnection().connect();
        boolean error=false;
       // String name=JOptionPane.showInputDialog("Enter New Allowance Name");
        String aname="",header="";
        JTextField xField = new JTextField(5);
         JTextField yField = new JTextField(5);

    JPanel myPanel = new JPanel();
    myPanel.add(new JLabel("Header:"));
    myPanel.add(xField);
    myPanel.add(Box.createHorizontalStrut(15)); // a spacer
    myPanel.add(new JLabel("Name:"));
    myPanel.add(yField);

    int result = JOptionPane.showConfirmDialog(null, myPanel,
        "New Allowance Addition", JOptionPane.OK_CANCEL_OPTION);
    
     if (result == JOptionPane.OK_OPTION) {
     header= xField.getText();
     aname= yField.getText();
    }
     if(header.equals("")|| aname.equals("")){
         error=true;
     }
    
    
         try {
                        if(!error){
                           String sql ="Alter table empAllowances Add "+header+" int" ;


                            PreparedStatement  preStat =(PreparedStatement) conn.prepareStatement(sql);
                            
                            preStat.executeUpdate();
                            
                           sql="insert into allowanceinfo values("+"'"+header+"'"+","+"'"+aname+"'"+")";
                             preStat =(PreparedStatement) conn.prepareStatement(sql);
                            
                            preStat.executeUpdate();
                            
                           
                            JOptionPane.showMessageDialog(null, "Allowance added");
                                preStat.close();
                        }

                      } catch (SQLException insertException) {
                           System.out.println("Error:"+insertException.getMessage());
                           JOptionPane.showMessageDialog(null, "ERROR: Can't add the new allowance");
                      }
         if(error)
          JOptionPane.showMessageDialog(null, "ERROR: Can't add the new allowance");
                      
         updateTable();
        
        
}//GEN-LAST:event_NewAllowanceActionPerformed
public void doupdate(){
     com.mysql.jdbc.Connection conn = new DBconnection().connect();
       boolean eflag=false,e2flag=false;
       int val=0;
        int row = jTable1.getSelectedRow();
        row=jTable1.convertRowIndexToModel(row);
        int col = jTable1.getSelectedColumn();
        col=jTable1.convertColumnIndexToModel(col);
                   String cname= jTable1.getColumnName(col);
                   
                    String sql = null;
                      try {
                          try{
                        
                         val=Integer.parseInt( jTable1.getModel().getValueAt(row, col).toString() );
                          }
                          catch(Exception e){
                              if(jTable1.getModel().getValueAt(row, col).toString().equals(""))
                              eflag=true;
                              else e2flag=true;
                          }
                        int id=(int)Integer.parseInt( jTable1.getModel().getValueAt(row, 1).toString() );
                        if(!eflag) {  
                          if(!e2flag)
                            sql ="Update empAllowances set "+cname+"="+val+ " where empid="+"'"+id+"'" ;
                        
                        }
                        else
                        sql ="Update empAllowances set "+cname+"=null"+ " where empid="+"'"+id+"'" ;
                            


                            PreparedStatement  preStat =(PreparedStatement) conn.prepareStatement(sql);
                            
                            preStat.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Updated");
                                preStat.close();

                      } catch (SQLException insertException) {
                           System.out.println("Error:"+insertException.getMessage());
                           JOptionPane.showMessageDialog(null, "ERROR: Can't Update the Record");
                      }
                      updateTable();

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Allowances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Allowances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Allowances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Allowances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Allowances().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NewAllowance;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField search;
    // End of variables declaration//GEN-END:variables
}
